services:
  db:
    image: postgres:16.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
      POSTGRES_URL: postgresql://test_user:test_password@db:5432/test_db?sslmode=disable
      PGDATA: /data
      TZ: "GMT+3"
    volumes:
      - ./volumes/pg/data:/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 10s
      timeout: 10s
      retries: 5
  migrate:
    depends_on:
      db:
        condition: service_healthy
    image: migrate/migrate
    volumes:
      - ./migrate:/migrations
    command:
      [
        "-path",
        "./migrations",
        "-database",
        "postgresql://test_user:test_password@db:5432/test_db?sslmode=disable",
        "up",
      ]
  web:
    image: ${NAME}:${VERSION}
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        NAME: ${NAME}
        VERSION: ${VERSION}
    environment:
      TZ: "Asia/Tashkent"
      VERSION: 1.0.0
      CONF_PATH: "config/conf.yaml"
    volumes:
      - ./volumes/web/log:/app/log
      - ../src/config/conf.yaml:/app/config/conf.yaml
    depends_on:
      db:
        condition: service_healthy
    stop_grace_period: 2s
    ports:
      - 127.0.0.1:9000:9000